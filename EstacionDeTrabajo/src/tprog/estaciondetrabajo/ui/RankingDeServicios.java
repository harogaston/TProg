/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tprog.estaciondetrabajo.ui;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import tprog.logica.clases.Acceso;
import tprog.logica.clases.ItemRanking;
import tprog.logica.controladores.CtrlProductos;
import tprog.logica.interfaces.ICtrlProductos;

/**
 *
 * @author sofia
 */
public class RankingDeServicios extends javax.swing.JInternalFrame {

    /**
     * Creates new form RankingDeServicios
     */
    RankingDeServicios(ICtrlProductos ctrlProductos) {
        initComponents();
        this.ctrlProductos = ctrlProductos;
        ArrayList<ItemRanking> ranking = ctrlProductos.obtenerRankingServicios();
        cargarTablaBonita(ranking);
        
    }
    private void cargarTablaBonita(ArrayList<ItemRanking> listaAccesos){
        DefaultTableModel modelo = (DefaultTableModel) rankingTabla.getModel();
        //Centrar contenido de las celdas
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        rankingTabla.setDefaultRenderer(String.class, centerRenderer);
        //CargarContenido
        String[] fila = new String[modelo.getColumnCount()];
        for (int i = 1; i < listaAccesos.size() + 1; i++) {
            fila[0] = i + "";
            fila[1] = listaAccesos.get(i-1).getServicio().getIdServicio();
            fila[2] = listaAccesos.get(i-1).getServicio().getNicknameP();
            fila[3] = listaAccesos.get(i-1).getCantAccesos() + "";
            modelo.addRow(fila);
        }
        //ResizeColumnsWidth
        for (int column = 0; column < rankingTabla.getColumnCount(); column++) {
            TableColumn columna = rankingTabla.getColumnModel().getColumn(column);
            int preferredWidth = columna.getMinWidth();
            int maxWidth = 275;
            for (int row = 0; row < rankingTabla.getRowCount(); row++) {
                TableCellRenderer cellRenderer = rankingTabla.getCellRenderer(row, column);
                Component c = rankingTabla.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + rankingTabla.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);
                if (preferredWidth >= maxWidth) {
                    preferredWidth = maxWidth;
                    break;
                }
            }
            columna.setPreferredWidth( preferredWidth );
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        rankingTabla = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Ranking de Servicios");

        rankingTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rank", "Servicio", "Proveedor", "Accesos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rankingTabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(rankingTabla);
        if (rankingTabla.getColumnModel().getColumnCount() > 0) {
            rankingTabla.getColumnModel().getColumn(0).setResizable(false);
            rankingTabla.getColumnModel().getColumn(1).setResizable(false);
            rankingTabla.getColumnModel().getColumn(2).setResizable(false);
            rankingTabla.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        ICtrlProductos ctrlProductos;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable rankingTabla;
    // End of variables declaration//GEN-END:variables
}
