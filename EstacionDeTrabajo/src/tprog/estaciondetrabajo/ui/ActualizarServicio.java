package tprog.estaciondetrabajo.ui;

import java.util.Iterator;
import java.util.Set;
import java.util.Vector;
import javax.swing.JOptionPane;
import tprog.logica.dt.DTMinServicio;
import tprog.logica.interfaces.ICtrlProductos;

public class ActualizarServicio extends javax.swing.JInternalFrame {

	public ActualizarServicio(ICtrlProductos ctrlProductos) {
		this.ctrlProductos = ctrlProductos;
		initComponents();
		getRootPane().setDefaultButton(botonModificar);
	}

	public void initCheck() {
		try {
			ctrlProductos.listarServicios();
		} catch (Exception ex) {
			JOptionPane.showMessageDialog(this, ex.getMessage(), "Información", JOptionPane.INFORMATION_MESSAGE);
			this.dispose();
		}
	}

	private void refresh() {

		listaServicios.clear();
		
		try {
			servicios = ctrlProductos.listarServicios();
			if (!servicios.isEmpty()) {
				for (DTMinServicio dt : servicios) {
					listaServicios.add(dt.getIdServicio());
				}
				listaServicios.sort(null);
			}
		} catch (Exception ex) {
			System.out.println("No hay servicios que mostrar.");
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listaServiciosInterfaz = new javax.swing.JComboBox(listaServicios);
        jLabel1 = new javax.swing.JLabel();
        botonModificar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Actualizar Servicio");
        setPreferredSize(new java.awt.Dimension(640, 480));
        setVisible(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listaServiciosInterfaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaServiciosInterfazInterfazActionPerformed(evt);
            }
        });
        getContentPane().add(listaServiciosInterfaz, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 418, -1));

        jLabel1.setText("<html>Seleccione algun servicio del sistema para modificar sus datos</html>");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, -1));

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

	DTMinServicio buscarDTMinServicio(String id) {
		DTMinServicio dt = null;
		Iterator it = servicios.iterator();
		boolean found = false;
		while (it.hasNext() && !found) {
			DTMinServicio tmp = (DTMinServicio) it.next();
			if (tmp.getIdServicio().equals(id)) {
				dt = tmp; //es imposible que dt sea null al final del loop
			}
		}
		return dt;
	}

    private void listaServiciosInterfazInterfazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaServiciosInterfazInterfazActionPerformed
		String servicioSeleccionado = (String) listaServiciosInterfaz.getSelectedItem();
		if (servicioSeleccionado != null) {
			DTMinServicio dt = buscarDTMinServicio(servicioSeleccionado);
			ctrlProductos.seleccionarServicio(dt);
		}
    }//GEN-LAST:event_listaServiciosInterfazInterfazActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
		refresh();
    }//GEN-LAST:event_formComponentShown

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
		servicios = null;
		listaServiciosInterfaz.setSelectedItem(null);
    }//GEN-LAST:event_formComponentHidden

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
		String cliente = (String) listaServiciosInterfaz.getSelectedItem();
		System.out.println("servicio: " + cliente);
		if (cliente != null) {
			ModificacionServicio m = new ModificacionServicio(this, ctrlProductos.infoServicio(), ctrlProductos);
			this.setVisible(false);
			getParent().add(m);
			m.setLocation(this.getLocation());
			m.setVisible(true);
		} else {
			JOptionPane.showMessageDialog(this, "No se seleccionó ningún servicio", "Información", JOptionPane.INFORMATION_MESSAGE);
		}
    }//GEN-LAST:event_botonModificarActionPerformed

	ICtrlProductos ctrlProductos;
	Set<DTMinServicio> servicios;
	VerInformacionDeCliente padre;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox listaServiciosInterfaz;
    private Vector<String> listaServicios = new Vector<>();
    // End of variables declaration//GEN-END:variables
}
